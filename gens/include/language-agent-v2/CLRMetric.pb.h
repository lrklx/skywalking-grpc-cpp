// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: language-agent-v2/CLRMetric.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_language_2dagent_2dv2_2fCLRMetric_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_language_2dagent_2dv2_2fCLRMetric_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common/common.pb.h"
#include "common/CLR.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_language_2dagent_2dv2_2fCLRMetric_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_language_2dagent_2dv2_2fCLRMetric_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_language_2dagent_2dv2_2fCLRMetric_2eproto;
class CLRMetricCollection;
class CLRMetricCollectionDefaultTypeInternal;
extern CLRMetricCollectionDefaultTypeInternal _CLRMetricCollection_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CLRMetricCollection* Arena::CreateMaybeMessage<::CLRMetricCollection>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CLRMetricCollection :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CLRMetricCollection) */ {
 public:
  CLRMetricCollection();
  virtual ~CLRMetricCollection();

  CLRMetricCollection(const CLRMetricCollection& from);
  CLRMetricCollection(CLRMetricCollection&& from) noexcept
    : CLRMetricCollection() {
    *this = ::std::move(from);
  }

  inline CLRMetricCollection& operator=(const CLRMetricCollection& from) {
    CopyFrom(from);
    return *this;
  }
  inline CLRMetricCollection& operator=(CLRMetricCollection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CLRMetricCollection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CLRMetricCollection* internal_default_instance() {
    return reinterpret_cast<const CLRMetricCollection*>(
               &_CLRMetricCollection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CLRMetricCollection& a, CLRMetricCollection& b) {
    a.Swap(&b);
  }
  inline void Swap(CLRMetricCollection* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CLRMetricCollection* New() const final {
    return CreateMaybeMessage<CLRMetricCollection>(nullptr);
  }

  CLRMetricCollection* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CLRMetricCollection>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CLRMetricCollection& from);
  void MergeFrom(const CLRMetricCollection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CLRMetricCollection* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CLRMetricCollection";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_language_2dagent_2dv2_2fCLRMetric_2eproto);
    return ::descriptor_table_language_2dagent_2dv2_2fCLRMetric_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsFieldNumber = 1,
    kServiceInstanceIdFieldNumber = 2,
  };
  // repeated .CLRMetric metrics = 1;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;
  public:
  void clear_metrics();
  ::CLRMetric* mutable_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLRMetric >*
      mutable_metrics();
  private:
  const ::CLRMetric& _internal_metrics(int index) const;
  ::CLRMetric* _internal_add_metrics();
  public:
  const ::CLRMetric& metrics(int index) const;
  ::CLRMetric* add_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLRMetric >&
      metrics() const;

  // int32 serviceInstanceId = 2;
  void clear_serviceinstanceid();
  ::PROTOBUF_NAMESPACE_ID::int32 serviceinstanceid() const;
  void set_serviceinstanceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_serviceinstanceid() const;
  void _internal_set_serviceinstanceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CLRMetricCollection)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLRMetric > metrics_;
  ::PROTOBUF_NAMESPACE_ID::int32 serviceinstanceid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_language_2dagent_2dv2_2fCLRMetric_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CLRMetricCollection

// repeated .CLRMetric metrics = 1;
inline int CLRMetricCollection::_internal_metrics_size() const {
  return metrics_.size();
}
inline int CLRMetricCollection::metrics_size() const {
  return _internal_metrics_size();
}
inline ::CLRMetric* CLRMetricCollection::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:CLRMetricCollection.metrics)
  return metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLRMetric >*
CLRMetricCollection::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:CLRMetricCollection.metrics)
  return &metrics_;
}
inline const ::CLRMetric& CLRMetricCollection::_internal_metrics(int index) const {
  return metrics_.Get(index);
}
inline const ::CLRMetric& CLRMetricCollection::metrics(int index) const {
  // @@protoc_insertion_point(field_get:CLRMetricCollection.metrics)
  return _internal_metrics(index);
}
inline ::CLRMetric* CLRMetricCollection::_internal_add_metrics() {
  return metrics_.Add();
}
inline ::CLRMetric* CLRMetricCollection::add_metrics() {
  // @@protoc_insertion_point(field_add:CLRMetricCollection.metrics)
  return _internal_add_metrics();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CLRMetric >&
CLRMetricCollection::metrics() const {
  // @@protoc_insertion_point(field_list:CLRMetricCollection.metrics)
  return metrics_;
}

// int32 serviceInstanceId = 2;
inline void CLRMetricCollection::clear_serviceinstanceid() {
  serviceinstanceid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CLRMetricCollection::_internal_serviceinstanceid() const {
  return serviceinstanceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CLRMetricCollection::serviceinstanceid() const {
  // @@protoc_insertion_point(field_get:CLRMetricCollection.serviceInstanceId)
  return _internal_serviceinstanceid();
}
inline void CLRMetricCollection::_internal_set_serviceinstanceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  serviceinstanceid_ = value;
}
inline void CLRMetricCollection::set_serviceinstanceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_serviceinstanceid(value);
  // @@protoc_insertion_point(field_set:CLRMetricCollection.serviceInstanceId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_language_2dagent_2dv2_2fCLRMetric_2eproto
