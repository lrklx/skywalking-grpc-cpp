// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: language-agent/ApplicationRegisterService.proto

#include "language-agent/ApplicationRegisterService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_language_2dagent_2fKeyWithIntegerValue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_KeyWithIntegerValue_language_2dagent_2fKeyWithIntegerValue_2eproto;
class ApplicationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Application> _instance;
} _Application_default_instance_;
class ApplicationMappingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ApplicationMapping> _instance;
} _ApplicationMapping_default_instance_;
static void InitDefaultsscc_info_Application_language_2dagent_2fApplicationRegisterService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Application_default_instance_;
    new (ptr) ::Application();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Application::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Application_language_2dagent_2fApplicationRegisterService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Application_language_2dagent_2fApplicationRegisterService_2eproto}, {}};

static void InitDefaultsscc_info_ApplicationMapping_language_2dagent_2fApplicationRegisterService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ApplicationMapping_default_instance_;
    new (ptr) ::ApplicationMapping();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ApplicationMapping::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ApplicationMapping_language_2dagent_2fApplicationRegisterService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ApplicationMapping_language_2dagent_2fApplicationRegisterService_2eproto}, {
      &scc_info_KeyWithIntegerValue_language_2dagent_2fKeyWithIntegerValue_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_language_2dagent_2fApplicationRegisterService_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_language_2dagent_2fApplicationRegisterService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_language_2dagent_2fApplicationRegisterService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_language_2dagent_2fApplicationRegisterService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Application, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Application, applicationcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ApplicationMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ApplicationMapping, application_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Application)},
  { 6, -1, sizeof(::ApplicationMapping)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Application_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ApplicationMapping_default_instance_),
};

const char descriptor_table_protodef_language_2dagent_2fApplicationRegisterService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/language-agent/ApplicationRegisterServ"
  "ice.proto\032(language-agent/KeyWithInteger"
  "Value.proto\"&\n\013Application\022\027\n\017applicatio"
  "nCode\030\001 \001(\t\"\?\n\022ApplicationMapping\022)\n\013app"
  "lication\030\001 \001(\0132\024.KeyWithIntegerValue2\\\n\032"
  "ApplicationRegisterService\022>\n\027applicatio"
  "nCodeRegister\022\014.Application\032\023.Applicatio"
  "nMapping\"\000BQ\n0org.apache.skywalking.apm."
  "network.language.agentP\001\252\002\032SkyWalking.Ne"
  "tworkProtocolb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_deps[1] = {
  &::descriptor_table_language_2dagent_2fKeyWithIntegerValue_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_sccs[2] = {
  &scc_info_Application_language_2dagent_2fApplicationRegisterService_2eproto.base,
  &scc_info_ApplicationMapping_language_2dagent_2fApplicationRegisterService_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_once;
static bool descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto = {
  &descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_initialized, descriptor_table_protodef_language_2dagent_2fApplicationRegisterService_2eproto, "language-agent/ApplicationRegisterService.proto", 381,
  &descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_once, descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_sccs, descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_language_2dagent_2fApplicationRegisterService_2eproto::offsets,
  file_level_metadata_language_2dagent_2fApplicationRegisterService_2eproto, 2, file_level_enum_descriptors_language_2dagent_2fApplicationRegisterService_2eproto, file_level_service_descriptors_language_2dagent_2fApplicationRegisterService_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_language_2dagent_2fApplicationRegisterService_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_language_2dagent_2fApplicationRegisterService_2eproto), true);

// ===================================================================

void Application::InitAsDefaultInstance() {
}
class Application::_Internal {
 public:
};

Application::Application()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Application)
}
Application::Application(const Application& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  applicationcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_applicationcode().empty()) {
    applicationcode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.applicationcode_);
  }
  // @@protoc_insertion_point(copy_constructor:Application)
}

void Application::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Application_language_2dagent_2fApplicationRegisterService_2eproto.base);
  applicationcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Application::~Application() {
  // @@protoc_insertion_point(destructor:Application)
  SharedDtor();
}

void Application::SharedDtor() {
  applicationcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Application::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Application& Application::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Application_language_2dagent_2fApplicationRegisterService_2eproto.base);
  return *internal_default_instance();
}


void Application::Clear() {
// @@protoc_insertion_point(message_clear_start:Application)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  applicationcode_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Application::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string applicationCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_applicationcode(), ptr, ctx, "Application.applicationCode");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Application::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Application)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string applicationCode = 1;
  if (this->applicationcode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_applicationcode().data(), static_cast<int>(this->_internal_applicationcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Application.applicationCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_applicationcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Application)
  return target;
}

size_t Application::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Application)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string applicationCode = 1;
  if (this->applicationcode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_applicationcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Application::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Application)
  GOOGLE_DCHECK_NE(&from, this);
  const Application* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Application>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Application)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Application)
    MergeFrom(*source);
  }
}

void Application::MergeFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Application)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.applicationcode().size() > 0) {

    applicationcode_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.applicationcode_);
  }
}

void Application::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Application::CopyFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Application::IsInitialized() const {
  return true;
}

void Application::InternalSwap(Application* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  applicationcode_.Swap(&other->applicationcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Application::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ApplicationMapping::InitAsDefaultInstance() {
  ::_ApplicationMapping_default_instance_._instance.get_mutable()->application_ = const_cast< ::KeyWithIntegerValue*>(
      ::KeyWithIntegerValue::internal_default_instance());
}
class ApplicationMapping::_Internal {
 public:
  static const ::KeyWithIntegerValue& application(const ApplicationMapping* msg);
};

const ::KeyWithIntegerValue&
ApplicationMapping::_Internal::application(const ApplicationMapping* msg) {
  return *msg->application_;
}
void ApplicationMapping::clear_application() {
  if (GetArenaNoVirtual() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
}
ApplicationMapping::ApplicationMapping()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ApplicationMapping)
}
ApplicationMapping::ApplicationMapping(const ApplicationMapping& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_application()) {
    application_ = new ::KeyWithIntegerValue(*from.application_);
  } else {
    application_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ApplicationMapping)
}

void ApplicationMapping::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ApplicationMapping_language_2dagent_2fApplicationRegisterService_2eproto.base);
  application_ = nullptr;
}

ApplicationMapping::~ApplicationMapping() {
  // @@protoc_insertion_point(destructor:ApplicationMapping)
  SharedDtor();
}

void ApplicationMapping::SharedDtor() {
  if (this != internal_default_instance()) delete application_;
}

void ApplicationMapping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ApplicationMapping& ApplicationMapping::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ApplicationMapping_language_2dagent_2fApplicationRegisterService_2eproto.base);
  return *internal_default_instance();
}


void ApplicationMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:ApplicationMapping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && application_ != nullptr) {
    delete application_;
  }
  application_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ApplicationMapping::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .KeyWithIntegerValue application = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_application(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplicationMapping::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ApplicationMapping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KeyWithIntegerValue application = 1;
  if (this->has_application()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::application(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ApplicationMapping)
  return target;
}

size_t ApplicationMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ApplicationMapping)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .KeyWithIntegerValue application = 1;
  if (this->has_application()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *application_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplicationMapping::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ApplicationMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplicationMapping* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplicationMapping>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ApplicationMapping)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ApplicationMapping)
    MergeFrom(*source);
  }
}

void ApplicationMapping::MergeFrom(const ApplicationMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ApplicationMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_application()) {
    _internal_mutable_application()->::KeyWithIntegerValue::MergeFrom(from._internal_application());
  }
}

void ApplicationMapping::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ApplicationMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplicationMapping::CopyFrom(const ApplicationMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ApplicationMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplicationMapping::IsInitialized() const {
  return true;
}

void ApplicationMapping::InternalSwap(ApplicationMapping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(application_, other->application_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplicationMapping::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Application* Arena::CreateMaybeMessage< ::Application >(Arena* arena) {
  return Arena::CreateInternal< ::Application >(arena);
}
template<> PROTOBUF_NOINLINE ::ApplicationMapping* Arena::CreateMaybeMessage< ::ApplicationMapping >(Arena* arena) {
  return Arena::CreateInternal< ::ApplicationMapping >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
